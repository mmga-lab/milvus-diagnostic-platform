{{- if .Values.controller.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "milvus-coredump-agent.fullname" . }}-controller
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "milvus-coredump-agent.labels" . | nindent 4 }}
    app.kubernetes.io/component: controller
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      {{- include "milvus-coredump-agent.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        {{- include "milvus-coredump-agent.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: controller
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/controller-configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "milvus-coredump-agent.serviceAccountName" . }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: controller
        image: {{ include "milvus-coredump-agent.controller.image" . }}
        imagePullPolicy: {{ include "milvus-coredump-agent.controller.pullPolicy" . }}
        command: ["/opt/milvus-coredump-agent/controller"]
        args:
          - "--config=/etc/controller/config.yaml"
          - "--http-addr=:{{ .Values.controller.service.api.targetPort }}"
          - "--metrics-addr=:{{ .Values.controller.service.metrics.targetPort }}"
        ports:
        - name: http-api
          containerPort: {{ .Values.controller.service.api.targetPort }}
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.controller.service.metrics.targetPort }}
          protocol: TCP
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        {{- if .Values.external.glmApiKey.secret }}
        - name: GLM_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.external.glmApiKey.secret }}
              key: {{ .Values.external.glmApiKey.key }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: http-api
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: http-api
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          {{- toYaml .Values.controller.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/controller
          readOnly: true
        {{- if .Values.controller.persistence.enabled }}
        - name: data
          mountPath: /data
        {{- end }}
        securityContext:
          runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
      volumes:
      - name: config
        configMap:
          name: {{ include "milvus-coredump-agent.fullname" . }}-controller-config
      {{- if .Values.controller.persistence.enabled }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "milvus-coredump-agent.fullname" . }}-controller-data
      {{- end }}
{{- end }}